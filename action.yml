name: docker-swarm-deploy
author: Skeyp
description: A GitHub Action that enables you to publish your app as a Docker stack to a remote Docker swarm.
inputs:
  docker_compose_file:
    description: The path to the docker-compose file to use
    required: false
    default: compose.yml
  docker_username:
    description: The docker user repository to push and pull to/from
    required: true
  docker_password:
    description: The docker api key associated with the docker user
    required: true
  remote_host:
    description: Remote host to connect to
    required: true
  remote_user:
    description: Remote user to use
    required: true
  remote_port:
    description: Remote port to use
    required: false
    default: "22"
  ssh_private_key:
    description: SSH private key to use to connect
    required: true
  stack_name:
    description: The name of your stack in the swarm
    required: true


runs:
  using: 'composite'
  steps:
      - uses: actions/checkout@v4
        with:
            sparse-checkout: ${{ inputs.docker_compose_file }}
            sparse-checkout-cone-mode: false

      - name: Create private key
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "${{ inputs.ssh_private_key }}" > ~/.ssh/private.key
          chmod 600 ~/.ssh/private.key
          cat > ~/.ssh/config <<EOF
          Host docker
            HostName ${{ inputs.remote_host }}
            User ${{ inputs.remote_user }}
            Port ${{ inputs.remote_port }}
            IdentityFile ~/.ssh/private.key
            StrictHostKeyChecking no
          EOF

      - name: Create Docker Context
        shell: bash
        run: |
          docker context create docker --docker "host=ssh://docker"
          docker context use docker

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.docker_username }}
          password: ${{ inputs.docker_password }}

      - name: Deploy to server
        shell: bash
        run: |
          docker stack deploy \
            --detach=false \
            --compose-file ${{ inputs.docker_compose_file }} \
            --with-registry-auth\
            --prune \
            ${{ inputs.stack_name }}


            


